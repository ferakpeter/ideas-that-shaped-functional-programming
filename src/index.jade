doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Ideas that shaped Functional Programming

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article

      section
        h1 Ideas that shaped Functional Programming
        h3
          a(href='https://twitter.com/ferakpeter') @ferakpeter
        img.avatar(src='images/profile.png')

      section
        img.avatar(src='images/codinghorror.png')
        br
        blockquote.
          Any application that <strong>can</strong> be written in JavaScript <strong>will</strong> eventually be written in JavaScript.
        br
        p
          a(href='https://twitter.com/codinghorror') Jeff Atwood

      section
        h2 Fast forward
        ul
          li Languages are going meta
          li Not restricted to the platform they will run on
          li Static Typing is very useful
          li Developer Experience and tooling

      section
        h2 Let's branch into a different domain
        img.img--med(src='images/music.jpg')

      section
        h2 Where are the similarities?
        ul
          li Fast paced, constantly changing
          li Trends matter
          li "Open-source"
          li Highly dependend on "hardware"
          li Usually performed by groups of individuals with different skill-sets

      section
        h2 How is music taught?

      section
        img.img--full(src='images/music-teaching1.jpg')

      section
        img.img--full(src='images/radio.jpg')

      section
        h2 How does music evolve?

      section
        img.img--full(src='images/music-styles.jpg')

      section
        ul
          li Musical ideas spread through communities, influence each others
          li Changes are incremental and usually small
          li But sometimes there are game-changers (paradigm-shifts)

      section
        img.img--med(src='images/electric-guitar.jpg')

      section
        h2 The electric guitar changed everything

      section
        h1 Paradigm shifts in Tech

      section
        h2 Backend

      section
        h2 Cloud was a new way to scale the backend
        img.img--med(src='images/horizontal-vs-vertical-scaling-vertical-and-horizontal-scaling-explained-diagram.png')

      section
        h2 Summary
        ul
          li Java and JVM better at squeezing all the juice out of a box
          li Functional paradigm better for stateless services

      section
        h2 Frontend

      section
        img.img--full(src='images/desktop-frontends.png')

      section
        img.img--full(src='images/web-frontend.jpg')

      section
        img.img--full(src='images/mobile-apps.jpg')

      section
        h2 Summary
        ul
          li Devices (Desktop to Web to Mobile)
          li Space
          li UX
          li Product design more integrated with dev teams
          li Less clutter and smaller applications
          li That serve specific use-cases
          li State can be distributed between applications (Google Docs)

      section
        h2 Both OOP and FP are designed to manage state in smaller chunks, where is the difference?

      section
        h2 OOP concepts are easier to misuse than FP
        ul
          li If objects are supposed to mutate each other with messages, why is this possible?
        pre
          code.language-javascript.
            var ret = '';
            ret = project.namespace + '.' + project.repository;
            ret += (project.subfolder === undefined
              || project.subfolder=='') ? '' : '.' + project.subfolder;
            ret += '.' + project.branch.replace(/\//g, '_');
            ret += (pipelineName === undefined) ? '' : '.' + pipelineName;
            return ret;

      section
        h2 As programmers we are like divers

      section
        h2 Readability is a big deal


      section
        h2 Influential people in Mathematics
        ul 18th century
          li Euler
        ul 19th century
          li Gauss
          li Fregge
          li Cantor
        ul 20th century
          li Hilbert
          li GÃ¶del
          li Church
          li Turing

      section
        img.avatar.avatar--med(src='images/kaiser.png')
        ul
          li Kaiser
          li ... and Computer?

      section
        h2 David Hilbert
        img.avatar.avatar--med(src='images/hilbert.png')
        ul
          li Formal definition of an algorithm?
          li Interested in the foundation of mathematics
          li Logic is complete
          li Entscheidungsproblem




      section
        h1 Thank you!
        h3
          a(href='https://twitter.com/ferakpeter') @ferakpeter
        img.avatar.avatar--small(src='images/profile.png')

    script(src='build/build.js')